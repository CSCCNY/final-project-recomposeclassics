# -*- coding: utf-8 -*-
"""ethan_autoencoder_segmented.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rEoNKEWnS5iN9esHWt5ar0S7JufkWmkf
"""

from google.colab import drive
drive.mount('/content/gdrive/')

# add Colab Notebooks to path so we can access autoencoder module
import sys
sys.path.insert(0,"/content/gdrive/My Drive/Colab Notebooks")

import os
import numpy as np
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
from autoencoder import VAE

learning_rate = 0.0005
batch_size = 16
epochs = 150

spectograms_path = "/content/gdrive/My Drive/Deep Learning/Final Project/fsdd2/spectrograms/"

def load_fsdd(spectrograms_path):
    x_train = []
    for root, _, file_names in os.walk(spectrograms_path):
        for file_name in file_names:
            file_path = os.path.join(root, file_name)
            spectrogram = np.load(file_path) # (n_bins, n_frames, 1) -> (256, 388)
            x_train.append(spectrogram)
    x_train = np.array(x_train)
    x_train = x_train[..., np.newaxis] # -> (1575, 256, 388, 1)
    return x_train

def train(x_train, learning_rate, batch_size, epochs):
    autoencoder = VAE(
        input_shape=(256, 388, 1),
        conv_filters=(512, 256), #(512, 256, 128, 64, 32)
        conv_kernels=(3, 3), # (3, 3, 3, 3, 3)
        conv_strides=(2, 2), # (2, 2, 2, 2, (2, 1))
        latent_space_dim=128
    )
    autoencoder.summary()
    autoencoder.compile(learning_rate)
    autoencoder.train(x_train, batch_size, epochs)
    return autoencoder

# load the log spectograms 
x_train = load_fsdd(spectograms_path)
x_train.shape # -> 1575 samples (midi files), 256 bins, 388 frames

autoencoder = train(x_train, learning_rate, batch_size, epochs)
autoencoder.save("model")